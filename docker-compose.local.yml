version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: memorygraph_dev
      POSTGRES_USER: memorygraph
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U memorygraph -d memorygraph_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Graph Services
  extractor-service:
    build:
      context: ./backend/graph-services/extractor-service
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GRAPH_EXTRACTION_LLM_PROVIDER=${GRAPH_EXTRACTION_LLM_PROVIDER}
      - GRAPH_EXTRACTION_MODEL=${GRAPH_EXTRACTION_MODEL}
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  inserter-service:
    build:
      context: ./backend/graph-services/inserter-service
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    environment:
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - NEO4J_DATABASE=${NEO4J_DATABASE}
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  retriever-service:
    build:
      context: ./backend/graph-services/retriever-service
      dockerfile: Dockerfile
    ports:
      - "8004:8000"
    environment:
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - NEO4J_DATABASE=${NEO4J_DATABASE}
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data: